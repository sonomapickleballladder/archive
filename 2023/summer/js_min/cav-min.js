function vrfrd(e,t){let a=getRound()+1,n=byId("round").value,r=n.replace(/[0-9]/g,""),o=parseInt(n.replace(r,""));if(isNaN(a))return event.preventDefault(),calert(!1,"Hang on!","Confirming availability is currently disabled as this Ladder season is not yet active (or has finished). It will be enabled "+Math.abs(frstC)+" days before the first round starts.","notice",0,0,0,0,"1.5em"),!1;if(o<a)return event.preventDefault(),calert(!1,"Error","You cannot confirm availability for a current or previous round.",0,0,0,0,0,"1.5em"),!1;if(o>a)return event.preventDefault(),calert(!1,"Error","You may only confirm availability for the next round. Please wait until "+byId("round").children[byId("round").selectedIndex-1].value+" to confirm for "+byId("round").value+".",0,0,0,0,0,"1.5em"),!1;if(e)try{try{if(!byId("agree1").checked)return calert(0,'<span style="font-size: x-large">Hang on!</span>','<span style="font-size: large">You must <a onclick="remvel(\'.modal__overlay\')" href="#attention">understand</a></span>',0,0,"50%",0,0,"0.75em"),!1}catch(e){}let e=`mailto:SPLconfirmations@riseup.net?subject=${thisLadder} Ladder | Yes for ${byId("round").value}&body=Confirming that I (${lsdciph(localStorage.getItem(ladderId.ls+"logged_in_user")).name}) am available for ${byId("round").value}.`;0==t&&(e=`mailto:SPLconfirmations@riseup.net?subject=${thisLadder} Ladder | No for ${byId("round").value}&body=I (${lsdciph(localStorage.getItem(ladderId.ls+"logged_in_user")).name}) am no longer available for ${byId("round").value}.`),byId("emailconfirmlink").href=e}catch(e){calert(!1,"Ah Shucks!","Unknown error.","error")}return!0}function vrfid(e){if(Boolean(e)||(e=!0),document.activeElement.blur(),!vrfrd())return!1;try{if(!byId("agree1").checked&&e)return calert(0,'<span style="font-size: x-large">Hang on!</span>','<span style="font-size: large">You must <a onclick="remvel(\'.modal__overlay\')" href="#attention">understand</a></span>',0,0,"50%",0,0,"0.75em"),!1}catch(e){}let t=lsdciph(localStorage.getItem(ladderId.ls+"logged_in_user")),a=t.name.replace(/(\s)/g,"").toLowerCase(),n=parseInt(byId("round").value.split(" ").pop().trim()),r=cipher(LZString.decompressFromEncodedURIComponent(t.expires)),o=r(`${n}/${a}`),i=r(`${n}/${a}/${e}`),l={round:n,name:t.name,smvig:t.token,encoding:o,encoding3:i,is_available:e};if(!confirm(`By clicking okay, you are confirming that you (${t.name}) are available (as defined above) for ${byId("round").value}.\r\n \r\nIf you are not, please hit cancel.`))return!1;setTimeout((function(){saveData("availability2.0",l).then((function(e){if(e.error)calert(0,"Server Error","Could not proccess your request. Please confirm by email instead.");else{checkstatus();let e=lsdciph(localStorage.getItem(brick("$_authenticated_user"+ladderSeason)));try{e=JSON.parse(e)}catch(e){}try{let t={true:{n:"Womens",ur:"@Womens/"},false:{n:"Open",ur:"../"}};if(e.ladder.includes("Open")&&e.ladder.includes("Womens")){let e=t["Open"==thisLadder];calert(0,'<span style="font-size: large">Successfully confirmed</span>',`<span style="font-size: larger">Click <a href="${e.ur}confirm_availability${protoMap[location.protocol]}">here</a> if you wish to also confirm your availability for the ${e.n} Ladder.</span>`,"notice",0,0,0,0,"1.5em")}}catch(e){}}}))}),500)}function checkstatus(){setTimeout(checkstatus,864e5);let e=lsdciph(localStorage.getItem(ladderId.ls+"logged_in_user"));ptc("availability2.0","encoding3","smvig",e.token).then((function(t){if(!((t=t.data)&&t.length>0))return showstatus("blablabla/giberish/false"),!1;{let a;try{a=parseInt(byId("round").value.split(" ")[1])}catch(e){a=getRound()+1}let n=decipher(LZString.decompressFromEncodedURIComponent(e.expires));for(let e=0;e<t.length;e++)try{let r=n(t[e].encoding3);if(parseInt(r.split("/")[0].trim())===a)return acwom=t[e].encoding3,showstatus(r),!1;if(e==t.length-1)return showstatus("blablabla/giberish/false"),!1}catch(e){}}}))}let acwom;function showstatus(e){e="boolean"!=typeof e?e.split("/")[2]:JSON.stringify(e),byId("confirmationstatus").innerHTML=map.status[e][0],byId("confirmationstatus").style.backgroundColor=map.status[e][1],byId("webconfirm").innerHTML=map.webconfirm[e][0],byId("webconfirm").style.backgroundColor=map.webconfirm[e][1],byId("emailconfirmlink").innerHTML=map.emailconfirm[e][0],byId("emailconfirmlink").parentNode.style.backgroundColor=map.emailconfirm[e][1],byId("emailconfirmlink").parentNode.setAttribute("onclick",`vrfrd('email', ${map.emailconfirm[e][2]})`);try{cfstatus=JSON.parse(e)}catch(e){}acwom&&byId("webconfirm").setAttribute("onclick","unvrfid()")}function unvrfid(e){if(cfstatus||(cfstatus=!1),Boolean(e)||(e=!cfstatus),document.activeElement.blur(),!vrfrd())return!1;try{if(!byId("agree1").checked&&e)return calert(0,'<span style="font-size: x-large">Hang on!</span>','<span style="font-size: large">You must <a onclick="remvel(\'.modal__overlay\')" href="#attention">understand</a></span>',0,0,"50%",0,0,"0.75em"),!1}catch(e){}let t=lsdciph(localStorage.getItem(ladderId.ls+"logged_in_user")),a=t.name.replace(/(\s)/g,"").toLowerCase(),n=parseInt(byId("round").value.split(" ").pop().trim()),r={encoding3:cipher(LZString.decompressFromEncodedURIComponent(t.expires))(`${n}/${a}/${e}`),is_available:e},o=`By clicking okay, you are confirming that you (${t.name}) are available (as defined above) for ${byId("round").value}.\r\n \r\nIf you are not, please hit cancel.`;if(e||(o=`By clicking okay, you (${t.name}) are withdrawing your availability for ${byId("round").value}.\r\n \r\nIf you do not wish to proceed, please hit cancel.`),!confirm(o))return!1;try{byId("confirmationstatus").innerHTML="pending...",byId("confirmationstatus").style.backgroundColor=""}catch(e){}setTimeout((function(){declareData("availability2.0",r,"encoding3",acwom).then((function(e){if(e.error)calert(0,"Server Error","Could not proccess your request. Please confirm by email instead.");else{checkstatus();let e=lsdciph(localStorage.getItem(brick("$_authenticated_user"+ladderSeason)));try{e=JSON.parse(e)}catch(e){}try{let t={true:{n:"Womens",ur:"@Womens/",tp:"confirm"},false:{n:"Open",ur:"../",tp:"withdraw"}};if(e.ladder.includes("Open")&&e.ladder.includes("Womens")){let e=t["Open"==thisLadder];calert(0,'<span style="font-size: large">Successfully updated</span>',`<span style="font-size: larger">Click <a href="${e.ur}confirm_availability${protoMap[location.protocol]}">here</a> if you wish to also update your availability for the ${e.n} Ladder.</span>`,"notice",0,0,0,0,"1.5em")}}catch(e){}}}))}),500)}function dateRound(e){try{if(parseInt(e.value.split(" ")[1])==getRound()+1){let t=rdLs.slice(0,parseInt(e.value.split(" ")[1]-1)).reduce(((e,t)=>e+t),0)*diW,a=rdLs.slice(0,parseInt(e.value.split(" ")[1])).reduce(((e,t)=>e+t),0)*diW-1;byId("dates").innerHTML=`&nbsp;${offsetDate(t)[1]} â€“ ${offsetDate(a)[1]}`;let n="";byId("rdlength").innerHTML=`&nbsp;<b>(${rdLs[parseInt(e.value.split(" ")[1])-1]}-Week Round${n})</b>`}else byId("dates").innerHTML="",byId("rdlength").innerHTML=""}catch(e){}}document.addEventListener("DOMContentLoaded",(function(){try{lgifnolg();try{byId("wkcalc").value=`Round ${JSON.parse(getRound())+1}`,byId("wkcalc").innerHTML=`Round ${JSON.parse(getRound())+1}`}catch(e){}try{let e={1:"By confirming below, you are attesting that you will be able to offer <b><i>a number of possible time-windows</i></b> in which to play, and that you will <b>not</b> be absent (traveling or otherwise unavailable) for <b><i>any significant chunk of the round</i></b>.",2:"By confirming below, you are attesting that you will be able to offer <b><i>a number of possible time-windows</i></b> in which to play, and that you will <b>not</b> be absent (traveling or otherwise unavailable) for <b><i>any significant chunk of the round</i></b>."};e[rdLs[getRound()]]?byId("atmsg").innerHTML=e[rdLs[getRound()]]:byId("atmsg").innerHTML=e[1]}catch(e){}try{paywall()}catch(e){}try{checkstatus()}catch(e){}try{localStorage.removeItem("niwmeMIennc3p")}catch(e){}try{dateRound(byId("round"))}catch(e){}}catch(e){alert("Fatal Error. This Page is not working properly.")}}));let cfstatus,map={status:{true:["Successfully Confirmed","#46b264"],false:["Not Confirmed","red"]},webconfirm:{true:["Withdraw Confirmation","red"],false:["Confirm via Website (preferable)",""]},emailconfirm:{true:["Withdraw Confirmation via Email","red",!1],false:["Confirm via Email","",!0]}};function paywall(e,t){let a=lsdciph(localStorage.getItem(ladderId.ls+"logged_in_user")),n=a.name.replace(/(\s)/g,"").toLowerCase(),r=cipher("limit")(n);ptc("pard","*","afaf",r).then((function(n){!n.error&&(n=n.data),n.length>0&&bag(n,e,t,a.name)}))}function bag(e,t,a,n){if(0==(e=e[0]).bool&&!a){let e=864e5;(!Boolean(localStorage.getItem(ladderId.ls+"payalert"))||Date.now()-localStorage.getItem(ladderId.ls+"payalert")>e)&&(localStorage.setItem(ladderId.ls+"payalert",Date.now()),calert(0,'<span style="font-size: large">Payment Alert</span>',`<span style="font-size: large">Hi ${lsdciph(localStorage.getItem(ladderId.ls+"logged_in_user")).name.split(" ")[0]}. According to our records, it looks like you still need to pay your <a style="color: palevioletred" target="_blank" href="signup${protoMap[location.protocol]}#price">administrative fees</a> for the ${thisLadder} Ladder. If you have already paid, please let us know by <a style="color: palevioletred" target="_blank" href="mailto:SPLInfo+payment@riseup.net?subject=Summer Season | ${thisLadder} Ladder Payment&body=I%20(${n})%20paid%20[person%20you%20paid]%20[amount%20you%20paid]%20on%20[date%20you%20paid]%20via%20[payment method]">email</a> (including when and who you paid, plus the amount). If not, please visit <a style="color: palevioletred" target="_blank" href="pay_options${protoMap[location.protocol]}">the payment options page</a>, which includes an up to date list of times you can pay in person.</span>`,"error",0,"50%","black","rgb(231, 247, 16)","1em"))}let r=document.getElementsByClassName("modal__window").length;if(e.ineg){let a=e.ineg.split(",");for(let e=0;e<a.length;e++){function o(){calert(0,'<span style="font-size: large">Ineligibility Alert</span>',`<span style="font-size: large">Hi ${lsdciph(localStorage.getItem(ladderId.ls+"logged_in_user")).name.split(" ")[0]}. Unfortunately you may not play for Round ${getRound()+1} because you have reportedly <a style="color: palevioletred" target="_blank" href="how_it_works${protoMap[location.protocol]}?r=p&t=1cbfaaa387e84e01f80fb5e333911ba69b7b16033a59ede4310e5cc002dec49e&bg=darkorange">failed to show up</a> for your match in Round ${getRound()}. Please wait until Round ${getRound()+2}, and do not forget about your matches in the future.</span>`,"error",0,"50%","black","rgb(231, 247, 16)","1em")}parseInt(a[e])!=getRound()+1||t||(r<1?o():(window.addEventListener("keydown",(function(e){27==e.which&&o()}),{once:!0}),window.addEventListener("click",(function(e){setTimeout((function(){document.getElementsByClassName("modal__window").length<1&&o()}),500)}),{once:!0})))}}}